<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="fbButton.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        61Qq/wO42aerdEn5fwAAAABJRU5ErkJggg==
</value>
  </data>
</root>